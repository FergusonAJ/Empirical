-= Next Steps =-
Fix how sectors are handled in surfaces to be more dynamic based on sizes of organisms.
- Consider sorting organisms by size and processing smallest first?
  Then any particular comparison is only up against as small or smaller.

-= Questions =-
Best way to convert to a c++ literal independent of type?


-= Near Future =-
Build a test system
Move scheduler over to Empirical
Build (find?) a logging system?
Consider new serialization options
- Option 1: Use only emp-specific types in classes that can be easily saved?
            (Makes coding harder)
- Option 2: #define overrides for types?  (tricky to get right, especially for STL types)
- Option 3: Require manual save a load functions?  (Requires all programmers to always keep updated,
            but might be possible with good automated test system.)


-= Optimizations to Explore =-
Explore if quick-looking up for sin, cos, tan should be at higher resolution (now it's 256 entires).
Currently doing all-pairs comparisons to detect collisions.  Other options:
* Sort by X first, stop second loop when x-distance > diameter
* Put circles into sectors; only check same or neighboring sectors
* Put circles into strips that we use the x-sorting technique on.
* Keep list of nearby circles updating only occasionally (base on velocity?) (using one of above methods?)

-= Other TODOs =-
Come up with a cleaner method to time functions?  Current macro is pretty ugly.


-= Improvements =-
Config: Should be able to output its own config header.
Config: Build links into variable setting to trigger function calls
Config: Warn more gracefully if a variable/const name is used more than once?


-= Useful Tools =-
A simple-to-modify and fast phenotype object
A genotype manager (for organisms with identical genomes)
A phenotype summary to include in the genotype
A phylogeny/lineage manager with multiple modes of purgeing (and link to phenotypes?)
A clade manager that will mark into phenotypes which clade they are

A data management system that can track data by:
  - Temporal series (values over time)
  - Batch (where a batch reset occurs periodicall)
  - Log (tracking particular events when they occur)
All output files should have headers that allow them to be read back in more easily.

A reference tool? Useful for pointing people to appropriate references to learn more about a component.
